- name: Creates directory Prometheus
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 1000
    group: 1000
  with_items:
  - "{{ Prometheus_conf_local }}"
  - "{{ Prometheus_conf_local }}/rules"
  - "{{ Prometheus_conf_local }}/data"
  - "{{ Prometheus_conf_local }}/scrape_config"

- name: Coppy file config Prometheus
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: 'templates/prometheus.yml.j2', dest: '{{ Prometheus_conf_local }}/prometheus.yml' }


- name: Setup Prometheus container
  docker_container:
    name: prometheus
    image: prom/prometheus:latest
    pull: yes
    user: "1000:1000"
    state: started
    restart: yes
    restart_policy: always
    volumes:
    - "/etc/timezone:/etc/timezone:ro"
    - "/etc/localtime:/etc/localtime:ro"
    - "{{ Prometheus_conf_local }}:{{ Prometheus_conf_container }}:rw"
    - "{{ Prometheus_conf_local }}/rules:{{ Prometheus_conf_container }}/rules:ro"
    - "{{ Prometheus_conf_local }}/data:{{ Prometheus_conf_container }}/data:rw"
    - "{{ Prometheus_conf_local }}/scrape_config:{{ Prometheus_conf_container }}/scrape_config:rw"
    - "{{ Prometheus_conf_local }}/prometheus.yml:{{ Prometheus_conf_container }}/prometheus.yml:rw"
    command: >
      --config.file={{ Prometheus_conf_container }}/prometheus.yml
      --storage.tsdb.path={{ Prometheus_conf_container }}/data
      --web.console.templates={{ Prometheus_conf_container }}/consoles
      --web.console.libraries={{ Prometheus_conf_container }}/console_libraries
      --web.listen-address=0.0.0.0:{{ prometheus_port }}
      --storage.tsdb.retention.time=365d
      --web.enable-admin-api
    network_mode: host