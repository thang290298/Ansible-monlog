filter {
  if [log][file][path] == "/usr/share/filebeat/logs/syslog" {
    grok {
      patterns_dir => ["/usr/share/logstash/patterns/grok-patterns"]
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
      remove_tag => [ "beats_input_codec_plain_applied" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss", "yyyy-MM-dd'T'HH:mm:ss" ]
      timezone => "Etc/GMT+7"
    }
  }
  if [log][file][path] == "/usr/share/filebeat/logs/auth.log" {
    grok {
      patterns_dir => ["/usr/share/logstash/patterns/grok-patterns"]
      match => {
        "message" => [
          "%{AUTH_VERIFY}",
          "%{AUTH_VERIFYv2}",
          "%{AUTH_CMD}",
          "%{AUTH_GROUP}",
          "%{AUTH_USER}",
          "%{AUTH_MESSAGE}"
        ] }
      remove_tag => [ "beats_input_codec_plain_applied" ]
      remove_tag => [ "_grokparsefailure1" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss", "yyyy-MM-dd'T'HH:mm:ss" ]
      timezone => "Etc/GMT+7"
    }
  }
}